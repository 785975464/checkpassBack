<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<!--  当访问被拒绝时，会转到403.jsp  -->
     <http access-denied-page ="/403.jsp" use-expressions="true">
         <intercept-url  pattern ="/index.jsp"  filters ="none"   />
         <form-login  login-page ="/index.jsp"
            authentication-failure-url ="/index.jsp?error=true"
            default-target-url ="/login"/>
         <logout  logout-success-url ="/index.jsp"  invalidate-session="true"/>
         <!--  增加一个filter，这点与Acegi是不一样的，不能修改默认的filter了，这个filter位于FILTER_SECURITY_INTERCEPTOR之前  -->
         <custom-filter  before ="FILTER_SECURITY_INTERCEPTOR" ref ="myFilter"/>
         <session-management>
        	<concurrency-control max-sessions="10000" error-if-maximum-exceeded="false"/>
    	 </session-management>
     </http>

     <!--  一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性，
           我们的所有控制将在这三个类中实现，解释详见具体配置  -->
     <beans:bean  id ="myFilter"  class = "com.njust.security.MyFilterSecurityInterceptor" >
         <beans:property  name ="authenticationManager"
            ref ="authenticationManager"   />
         <beans:property  name ="accessDecisionManager"
            ref ="myAccessDecisionManagerBean"   />
        <beans:property  name ="securityMetadataSource"
            ref ="securityMetadataSource"   />
     </beans:bean>
    
     <!--  认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可  -->
     <authentication-manager  alias ="authenticationManager" >
         <authentication-provider
             user-service-ref ="myUserDetailService" >
             <!--   设置密码加密方法
                <password-encoder hash="md5" />
             -->
         </authentication-provider >
     </authentication-manager >
     <beans:bean  id ="myUserDetailService"
        class ="com.njust.security.MyUserDetailService"/>

     <!--  访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源  -->
     <beans:bean  id ="myAccessDecisionManagerBean"
        class ="com.njust.security.MyAccessDecisionManager" >
     </beans:bean >
    
     <!--  资源源数据定义，即定义某一资源可以被哪些角色访问  -->
  
     <beans:bean  id ="securityMetadataSource"
        class ="com.njust.security.MyInvocationSecurityMetadataSource">
     </beans:bean >
</beans:beans >
